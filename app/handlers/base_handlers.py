from aiogram import Bot, F, Router, types
from aiogram.enums import ParseMode
from aiogram.filters import Command, CommandStart
from aiogram.utils import markdown
from aiogram.utils.keyboard import InlineKeyboardBuilder
from sqlalchemy.ext.asyncio import AsyncSession

from app.crud.group import crud_group, crud_user_group_association
from app.filters.filters import IsAdmin
from app.models import UserGroupAssociation
from app.services.services import chat_members

router = Router()


# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start, –µ—Å–ª–∏ –æ–Ω–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏–∑ —á–∞—Ç–∞
@router.message(
    CommandStart(),
    F.chat.type.in_({'group', 'supergroup', 'channel'}),
    IsAdmin(),
)
async def start_in_chat(message: types.Message, bot: Bot, session: AsyncSession):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start –≤ –≥—Ä—É–ø–ø–µ, —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø–µ –∏–ª–∏ –∫–∞–Ω–∞–ª–µ.

    :param message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    :param bot: –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
    :param session: –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è SQLAlchemy
    """
    chat: types.Chat = message.chat
    user_data: list[dict] = await chat_members(chat.id)
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, —Å–≤—è–∑—ã–≤–∞—è –∏—Ö —Å –≥—Ä—É–ø–ø–æ–π
    await crud_group.add_chat_members_to_db(
        chat=chat, user_data=user_data, session=session
    )


# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start, –µ—Å–ª–∏ –æ–Ω–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ
@router.message(
    CommandStart(),
    F.chat.type.in_({'private'}),
)
async def start_in_bot(message: types.Message, session: AsyncSession):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ.

    :param message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    :param session: –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è SQLAlchemy
    """
    user_id: int = message.from_user.id
    # –°–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ –∫–ª–∞—Å—Å–∞ UserGroupAssociation, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω
    user_chat_admin: list[
        UserGroupAssociation
    ] = await crud_user_group_association.get_chat_where_user_admin(
        user_id=user_id, session=session
    )
    # –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –Ω–µ –ø—É—Å—Ç, –ø–æ–ª—É—á–∞—é —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤
    if user_chat_admin:
        faction: list[str] = [
            '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É',
            '–£–¥–∞–ª–∏—Ç—å –∏–∑ —Ä–∞—Å—Å—ã–ª–∫–∏',
        ]
        builder = InlineKeyboardBuilder()
        for action in faction:
            builder.add(
                types.InlineKeyboardButton(
                    text=action,
                    callback_data=f'faction_{action}_{user_id}',
                )
            )
        builder.adjust(2)
        await message.answer(
            (
                '–í—ã–±–µ—Ä–∏ —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å:\n'
                'üëâ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É - –≤ 19:50 –±–æ—Ç –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è '
                '–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö –∫–æ—Ç–æ—Ä—ã–µ–Ω–µ –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –≤ —á–∞—Ç –ø–æ—Å–ª–µ 17:00\n\n'
                'üëâ –£–¥–∞–ª–∏—Ç—å –∏–∑ —Ä–∞—Å—Å—ã–ª–∫–∏ - —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ä–∞—Å—Å—ã–ª–∫–∏. '
                '–ë–æ—Ç –Ω–µ –±—É–¥–µ—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ä–∞—Å—Å—ã–ª–∫–µ, –µ—Å–ª–∏ –æ–Ω –Ω–µ –æ—Ç–ø–∏—Å–∞–ª—Å—è '
                '–ø–æ–ª–µ–∑–Ω–æ –∫–æ–≥–¥–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –≤ —á–∞—Ç–µ, –Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –¥—Ä—É–≥–æ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏'
            ),
            reply_markup=builder.as_markup(resize_keyboard=True),
        )
    else:
        await message.answer(
            '‚ùó–¢—ã –Ω–µ –∞–¥–º–∏–Ω –Ω–∏ –≤ –æ–¥–Ω–æ–π –≥—Ä—É–ø–ø–µ –∏–ª–∏ –Ω–µ –¥–æ–±–∞–≤–∏–ª –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É.\n'
            '–î–æ–±–∞–≤—å –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É, –Ω–∞–∑–Ω–∞—á—å –µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º, –∞ –ø–æ—Ç–æ–º –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è.'
        )


# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /help, –µ—Å–ª–∏ –æ–Ω–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ
@router.message(
    Command('help'),
    F.chat.type.in_({'private'}),
)
async def help(message: types.Message, bot: Bot, session: AsyncSession):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /help –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ.

    :param message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    :param bot: –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
    :param session: –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è SQLAlchemy
    """
    await message.answer(
        '‚ùó–° 17:00 –¥–æ 19:50 –±–æ—Ç –æ—Ç–ª–∞–≤–ª–∏–≤–∞–µ—Ç –≤ –≥—Ä—É–ø–ø–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Å–ª–æ–≤–æ–º "–ø–æ—Ä—è–¥–æ–∫"\n\n'
        '‚ùó–í 19:50 –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –ª—é–¥–µ–π –Ω–µ –Ω–∞–ø–∏—Å–∞–≤—à–∏—Ö —Å–ª–æ–≤–æ "–ø–æ—Ä—è–¥–æ–∫" –∞–¥–º–∏–Ω—É –≥—Ä—É–ø–ø—ã, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É'
    )
